name: Build and Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

env:
  GO_VERSION: "1.22"

jobs:
  test:
    name: Test and Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    
    - name: Download dependencies
      run: |
        go mod download
        go mod verify
    
    - name: Run tests with coverage
      run: |
        go test -v -race -coverprofile=coverage.out -covermode=atomic ./...
    
    - name: Verify coverage file
      run: |
        if [ ! -f coverage.out ]; then
          echo "❌ Coverage file not found"
          exit 1
        fi
        
        if [ ! -s coverage.out ]; then
          echo "❌ Coverage file is empty"
          exit 1
        fi
        
        echo "✅ Coverage file generated successfully"
        echo "Coverage file size: $(wc -l < coverage.out) lines"
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    environment: sonarcloud
    needs: test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    
    - name: Run tests with coverage for SonarCloud
      run: |
        go test -v -race -coverprofile=coverage.out -covermode=atomic ./...
    
    - name: SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@v5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [test, sonarcloud]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    
    - name: Build application
      run: |
        # Build for current platform
        go build -v -o takedown cmd/takedown/main.go
        
        # Test binary
        ./takedown --help || echo "Help command executed"
    
    - name: Build multi-platform binaries
      if: github.ref == 'refs/heads/main'
      run: |
        # Linux AMD64
        GOOS=linux GOARCH=amd64 go build -o takedown-linux-amd64 cmd/takedown/main.go
        
        # Linux ARM64  
        GOOS=linux GOARCH=arm64 go build -o takedown-linux-arm64 cmd/takedown/main.go
        
        # macOS AMD64
        GOOS=darwin GOARCH=amd64 go build -o takedown-darwin-amd64 cmd/takedown/main.go
        
        # macOS ARM64 (Apple Silicon)
        GOOS=darwin GOARCH=arm64 go build -o takedown-darwin-arm64 cmd/takedown/main.go
        
        # Windows AMD64
        GOOS=windows GOARCH=amd64 go build -o takedown-windows-amd64.exe cmd/takedown/main.go
    
    - name: Upload build artifacts
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: takedown-binaries
        path: takedown-*
        retention-days: 30